// ==UserScript==
// @name            AnimeStars Club Booster
// @name:en         AnimeStars Club Booster
// @name:ru         AnimeStars Club Booster
// @namespace       http://tampermonkey.net/
// @version         2025-06-07.3
// @description     –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—Å–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–≤ –∫–∞—Ä—Ç –≤ –∫–ª—É–±—ã AnimeStars.org
// @description:ru  –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤–Ω–µ—Å–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–≤ –∫–∞—Ä—Ç –≤ –∫–ª—É–±—ã AnimeStars.org
// @description:en  The script for automating card boosting in clubs AnimeStars.org
// @author          Anton Zelinsky
// @match           https://animestars.org/clubs/boost/?id=*
// @match           https://astars.club/clubs/boost/?id=*
// @match           https://asstars.club/clubs/boost/?id=*
// @match           https://asstars1.astars.club/clubs/boost/?id=*
// @match           https://as1.astars.club/clubs/boost/?id=*
// @match           https://asstars.tv/clubs/boost/?id=*
// @match           https://ass.astars.club/clubs/boost/?id=*
// @run-at          document-idle
// @license         MIT
// @icon            https://www.google.com/s2/favicons?sz=64&domain=animestars.org
// @grant           none
// @homepageURL     https://github.com/AntonZelinsky/AnimeStars_Club_Booster
// @updateURL       https://github.com/AntonZelinsky/AnimeStars_Club_Booster/blob/master/script.user.js
// @downloadURL     https://github.com/AntonZelinsky/AnimeStars_Club_Booster/blob/master/script.user.js
// ==/UserScript==


const DELAY_MS = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ = 1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥

(function () {
  "use strict"

  function getMoscowTime() {
    const mskString = new Date().toLocaleString("en-US", {
      timeZone: "Europe/Moscow",
    })
    return new Date(mskString)
  }

  function getTarget2101Moscow(nowMsk) {
    const target = new Date(nowMsk)
    target.setHours(21, 1, 0, 0)
    return target
  }

  function getSecondsUntil2101Moscow() {
    const nowMsk = getMoscowTime()
    const target = getTarget2101Moscow(nowMsk)
    const diffMs = target - nowMsk
    return diffMs > 0 ? Math.floor(diffMs / 1000) : 0
  }

  function isTimeExpired() {
    const moscowTime = getMoscowTime()
    if (moscowTime.getHours() > 22) {
      console.info('üèÅ –í—Ä–µ–º—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å.')
      return true;
    }
    return false;
  }

  function sleep(seconds) {
    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));
  }

  function reloadPageAfter5min() {
    // –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Ç–∞–∫ –∫–∞–∫ —Å—á—ë—Ç—á–∏–∫ –≤–Ω–µ—Å—ë–Ω–Ω—ã—Ö –∫–∞—Ä—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
    console.log(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.`)
    setTimeout(() => {
      location.reload();
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç
  }

  function isBoostLimitReached() {
    const limitCounter = document.querySelector(".boost-limit").innerText
    return limitCounter == 300
  }

  function handleBoost() {
    console.log(`–í–Ω–µ—Å–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–≤ –Ω–∞—á–∞—Ç–æ.`)
    const intervalId = setInterval(() => {
      const refreshBtn = document.querySelector(".button.button--primary.club__boost__refresh-btn")
      if (refreshBtn) {
        refreshBtn.click()
        console.log(`üåÄ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∞.`)
        return
      }

      const contributeBtn = document.querySelector(".button.button--primary.club__boost-btn")
      if (contributeBtn) {
        contributeBtn.click()
        console.info(`üí≥ –í–Ω–µ—Å–µ–Ω–∞ –∫–∞—Ä—Ç–∞: ${new Date().toLocaleTimeString()}.`)
        return
      }

      if (isTimeExpired(intervalId)) {
        clearInterval(intervalId);
        return
      }

      console.log("‚è≥ –ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∂–¥—É...", new Date().toLocaleTimeString())
    }, DELAY_MS);
  }

  async function run() {
    console.log("–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã ...")
    reloadPageAfter5min()

    const secondsLeft = getSecondsUntil2101Moscow()
    if (secondsLeft > 0) {
      console.log(`–î–æ 21:01 –ú—Å–∫ –æ—Å—Ç–∞–ª–æ—Å—å ${secondsLeft} —Å–µ–∫—É–Ω–¥.`)
      await sleep(secondsLeft + 1)
      location.reload()
      return
    }

    if(isBoostLimitReached()) {
      console.info(`üí≥ –õ–∏–º–∏—Ç –∫–∞—Ä—Ç –∏—Å—á–µ—Ä–ø–∞–Ω: ${new Date().toLocaleTimeString()}.`)
      return
    }
    if (isTimeExpired()) {
      return
    }

    handleBoost()
    console.log(`üèÅ –í–Ω–µ—Å–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.`)
  }

  run()
})()
